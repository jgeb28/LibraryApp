
@model LibraryApp.Models.BookModel

@{
    ViewData["Title"] = "Book Details";
    var id = Model.Id;
}

<h1>Book Details</h1>

<div class="card mb-4">
    <div class="card-header">
        <h2>@Model.Title</h2>
    </div>
    <div class="card-body">
        <p><strong>Author:</strong> @Model.Author</p>
        <p><strong>Year Published:</strong> @Model.YearPublished</p>
        <p><strong>Genre:</strong> @Model.Genre</p>
        <p><strong>Publisher:</strong> @Model.Publisher</p>
        <p><strong>Description:</strong> @Model.Description</p>
        <p><strong>Status:</strong> @Model.Status</p>
        <p><strong>Total copies:</strong> @Model.TotalCopies</p>
        <p><strong>Available copies:</strong> @Model.AvailableCopies</p>
    </div>
</div>

<div class="mt-3">
    <a asp-controller="BookView" asp-action="DisplayBooks" class="btn btn-secondary">Back to List</a>
    <a asp-controller="BookView" asp-action="EditBook" asp-route-id="@Model.Id" class="btn btn-primary">Edit Book</a>
    <button class="btn btn-danger" onclick="deleteBook('@Model.Id')">Delete</button>
</div>

<div id="messageContainer"></div>

<script>
    async function deleteBook(bookId) {
        if (confirm('Are you sure you want to delete this book?')) {
            try {
                const response = await fetch(`/api/Book/delete/${bookId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                });
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message);
                }

                const data = await response.json();
                if (data.message) {
                    sessionStorage.setItem('deleteMessage', data.message);
                    window.location.href = '/Books';
                }
            } catch(error) {
                console.log(error);
                document.getElementById('messageContainer').innerHTML = `<span class="text-danger">Error: ${error.message}</span>`;
            }
        }
    }
 </script>